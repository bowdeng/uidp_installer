# SECRETS / CONFIGMAPS
---
# Docker Registry Credentials
apiVersion: v1
kind: Secret
metadata:
  name:  regcred
  namespace: {{ .Release.Namespace }}
  labels:
    app: uidp
    name: regcred
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: "eyJhdXRocyI6eyJ1aWRwcmVnLmF6dXJlY3IuaW8iOnsidXNlcm5hbWUiOiJ1aWRwcmVnIiwicGFzc3dvcmQiOiJLaGZEdD1FPUcwOStQWGtoSW9CV2xXWkQ1MlBLR2VUcCIsImVtYWlsIjoiZ2x5bi5ib3dkZW5AaHBlLmNvbSIsImF1dGgiOiJkV2xrY0hKbFp6cExhR1pFZEQxRlBVY3dPU3RRV0d0b1NXOUNWMnhYV2tRMU1sQkxSMlZVY0E9PSJ9fX0="
---
# Keycloak admin password
apiVersion: v1
kind: Secret
metadata:
  name: keycloak
  namespace: {{ .Release.Namespace }}
  labels:
    app: uidp
    component: keycloak
data:
  admin_password: "bGV0bWVpbjEyMw=="
---
# Keycloak admin user
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak
  namespace: {{ .Release.Namespace }}
  labels:
    app: uidp
    component: keycloak
data:
  admin_user: "uidp"
# SERVICES #
---
# Keycloak Service
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: uidp
    component: keycloak
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: uidp
    component: keycloak
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: LoadBalancer
---
# Auth proxy service
apiVersion: v1
kind: Service
metadata:
  name: uidp-cp-auth-proxy
  labels:
    app: uidp
    component: uidp-cp-auth-proxy
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: uidp
    component: uidp-cp-auth-proxy
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: LoadBalancer
---
# Usecase Service
apiVersion: v1
kind: Service
metadata:
  name: uidp-cp-usecase-service
  labels:
    component: uidp-cp-usecase-service
    app: uidp
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: uidp
    component: uidp-cp-usecase-service
  ports:
  - protocol: TCP
    port: 8101
    targetPort: 8101
  type: LoadBalancer
---
# Environment Service
apiVersion: v1
kind: Service
metadata:
  name: uidp-cp-environment-service
  labels:
    component: uidp-cp-environment-service
    app: uidp
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: uidp
    component: uidp-cp-environment-service
  ports:
  - protocol: TCP
    port: 8102
    targetPort: 8102
  type: LoadBalancer
---
# Build Service
apiVersion: v1
kind: Service
metadata:
  name: uidp-cp-build-service
  labels:
    component: uidp-cp-build-service
    app: uidp
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    component: uidp-cp-build-service
    app: uidp
  ports:
  - protocol: TCP
    port: 8110
    targetPort: 8110
  type: LoadBalancer
---
# UI Service
apiVersion: v1
kind: Service
metadata:
  name: uidp-ui
  labels:
    app: uidp-ui
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: uidp-ui
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    name: http
  - port: 443
    targetPort: 443
    name: https
  - port: 3000
    targetPort: 3000
    name: nodejs
---
# Deployments #
---
# Keycloak Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: keycloak
  labels:
    app: uidp
    component: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uidp
      component: keycloak
  template:
    metadata:
      name: keycloak
      labels:
        name: keycloak
        app: uidp
        component: keycloak
    spec:
      containers:
        - image: jboss/keycloak:latest
          name: keycloak
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
          env:
            - name: KEYCLOAK_USER
              valueFrom:
                configMapKeyRef:
                  name: keycloak
                  key: admin_user
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak
                  key: admin_password
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: DB_VENDOR
              value: H2
          ports:
            - containerPort: 8080
              name: http
---
# Auth proxy deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uidp-cp-auth-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    component: uidp-cp-auth-proxy
    app: uidp
spec:
  replicas: 1
  selector:
    matchLabels:
      component: uidp-cp-auth-proxy
      app: uidp
  template:
    metadata:
      name: uidp-cp-auth-proxy
      labels:
        component: uidp-cp-auth-proxy 
        app: uidp
    spec:
      containers:
      - name: uidp-cp-auth-proxy
        image: uidpreg.azurecr.io/uidp-cp-auth-proxy:{{ .Values.releaseTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: regcred
---
# Use case service deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uidp-cp-usecase-service
  namespace: {{ .Release.Namespace }}
  labels:
    component: uidp-cp-usecase-service
    app: uidp
spec:
  replicas: 1
  selector:
    matchLabels:
      component: uidp-cp-usecase-service
      app: uidp
  template:
    metadata:
      name: uidp-cp-usecase-service
      labels:
        component: uidp-cp-usecase-service
        app: uidp
    spec:
      containers:
      - name: uidp-cp-usecase-service
        image: uidpreg.azurecr.io/uidp-cp-usecase-service:{{ .Values.releaseTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8101
      imagePullSecrets:
      - name: regcred
---
# Environment service deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uidp-cp-environment-service
  namespace: {{ .Release.Namespace }}
  labels:
    component: uidp-cp-environment-service
    app: uidp
spec:
  replicas: 1
  selector:
    matchLabels:
      component: uidp-cp-environment-service
      app: uidp
  template:
    metadata:
      name: uidp-cp-environment-service
      labels:
        component: uidp-cp-environment-service
        app: uidp
    spec:
      containers:
      - name: uidp-cp-environment-service
        image: uidpreg.azurecr.io/uidp-cp-environment-service:{{ .Values.releaseTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8102
      imagePullSecrets:
      - name: regcred
---
# Build service deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uidp-cp-build-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: uidp
    component: uidp-cp-build-service
spec:
  replicas: 1
  selector:
    matchLabels:
      component: uidp-cp-build-service
      app: uidp
  template:
    metadata:
      name: uidp-cp-build-service
      labels:
        component: uidp-cp-build-service
        app: uidp
    spec:
      containers:
      - name: uidp-cp-build-service
        image: uidpreg.azurecr.io/uidp-cp-build-service:{{ .Values.releaseTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8110
      imagePullSecrets:
      - name: regcred
---
# UI deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uidp-ui
  namespace: {{ .Release.Namespace }}
  labels:
    app: uidp-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uidp-ui
  template:
    metadata:
      name: uidp-ui
      labels:
        app: uidp-ui
    spec:
      containers:
      - name: uidp-ui
        image: uidpreg.azurecr.io/uidp-ui:{{ .Values.releaseTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 3000
      imagePullSecrets:
      - name: regcred
