---
apiVersion: v1
kind: Service
metadata:
  name: build-service
  namespace: {{ .Release.Namespace }}
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name:  build-mapping
      prefix: /bld/api/v1/
      rewrite: /api/v1/
      service: build-service:8110
      cors:
        origins: "*"
        headers: Content-Type, Authorization, Accept
spec:
  selector:
    app: uidp
    component: uidp-cp-build-service
  ports:
  - protocol: TCP
    name: build-service
    port: 8110
    targetPort: 8110
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: uidp-cp-build-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: uidp
    component: uidp-cp-build-service
spec:
  replicas: 1
  selector:
    matchLabels:
      component: uidp-cp-build-service
      app: uidp
  template:
    metadata:
      name: uidp-cp-build-service
      labels:
        component: uidp-cp-build-service
        app: uidp
    spec:
      serviceAccountName: {{ .Values.rbac.serviceAccounts.oneai.name }}
      containers:
      - name: uidp-cp-build-service
        image: {{ .Values.oneai.releaseRepository }}/uidp-cp-build-service:{{ .Values.oneai.releaseTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8110
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: uidp-postgres-credentials
                key: user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: uidp-postgres-credentials
                key: password
          - name: POSTGRES_HOST
            value: uidp-postgres
      {{ if .Values.oneai.secureRegistry -}}
      imagePullSecrets:
      - name: regcred-{{ .Release.Name }}
      {{- end }}
---