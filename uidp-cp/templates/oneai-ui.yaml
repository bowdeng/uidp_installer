---
# UI Service
apiVersion: v1
kind: Service
metadata:
  name: uidp-ui
  namespace: {{ .Release.Namespace }}
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name:  build-mapping
      prefix: /ui/
      rewrite: /
      service: ui-service:80
      cors:
        origins: "*"
        headers: Content-Type, Authorization, Accept
  labels:
    app: uidp-ui
spec:
  selector:
    app: uidp-ui
  ports:
  - port: 80
    targetPort: 80
    name: http
  - port: 443
    targetPort: 443
    name: https
  - port: 3000
    targetPort: 3000
    name: nodejs
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: uidp-ui
  namespace: {{ .Release.Namespace }}
  labels:
    app: uidp-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uidp-ui
  template:
    metadata:
      name: uidp-ui
      labels:
        app: uidp-ui
    spec:
      containers:
      - name: uidp-ui
        image: {{ .Values.oneai.releaseRepository }}/uidp-ui:{{ .Values.oneai.releaseTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 3000
      {{ if .Values.oneai.secureRegistry -}}
      imagePullSecrets:
      - name: regcred-{{ .Release.Name }}
      {{- end }}
      serviceAccountName: {{ .Values.rbac.serviceAccounts.oneai.name }}

